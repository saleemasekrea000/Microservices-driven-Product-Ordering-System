version: "3.9"

services:
  order_db:
    image: postgres:15.3-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
        ]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - store

  migration:
    image: migrate/migrate
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${DB_PORT}/${POSTGRES_DB}?sslmode=disable",
        "up",
      ]
    volumes:
      - ./migrations:/migrations
    depends_on:
      order_db:
        condition: service_healthy
    networks:
      - store

  order_application:
    depends_on:
      - order_db
    environment:
      port: ${port}
      DB_HOST: ${DB_HOST}
      DB_PORT: "${DB_PORT}"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${port}:${port}
    networks:
      - store

networks:
  store:
    external: true
